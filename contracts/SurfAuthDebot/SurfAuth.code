.version sol 0.47.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
TRUE
SETGLOB 6
;; end constructor protection
ENDS
ACCEPT
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro onAuth
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: hash
CALLREF {
	CALL $onAuth_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onAuth_internal
.type	onAuth_internal, @function
CALL $onAuth_internal_macro$

.macro onAuth_internal_macro
;; param: hash
DEPTH
ADDCONST -5
PICK
THROWIF 72
; function onAuth
;; get member sender
GETGLOB 9
;; push identifier hash
PUSH S1
;; emit BOT_INI_nifi_bot1_1
CALLREF {
	CALL $SwiftAddress_no_obj_value_macro$
}
NEWC
STSLICECONST xc
STSLICE
PUSHINT 1
STUR 98
ROTREV
NEWC
STSLICECONST x12637937
STU 256
STSLICE
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
; end function onAuth
DROP

.macro getAuthMsg
DROP
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: hash
CALLREF {
	CALL $getAuthMsg_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x0000000000000000000000002b61daac6_
	STSLICER
	STREF
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getAuthMsg_internal
.type	getAuthMsg_internal, @function
CALL $getAuthMsg_internal_macro$

.macro getAuthMsg_internal_macro
;; param: hash
;; ret param: message
PUSHREF {
}
; function getAuthMsg
;; push identifier hash
PUSH S1
NEWC
STSLICECONST x381224b2
STU 256
ENDC
;; decl: body
NEWC
;; decl: message_
; expValue
DUP
; end expValue
MYADDR
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
ROT
STSLICECONST x6
STSLICE
STSLICE
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
PUSHINT 0
STGRAMS
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
STZERO
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
PUSHINT 0
STGRAMS
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
PUSHINT 0
STGRAMS
; colValue
NIP
; end colValue
; expValue
; end expValue
;; uint64
PUSHINT 0
; colValue
SWAP
STU 64
; end colValue
; expValue
; end expValue
;; uint32
PUSHINT 0
; colValue
SWAP
STU 32
; end colValue
; expValue
DUP
; end expValue
STZERO
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
PUSHINT 1
STUR 1
; colValue
NIP
; end colValue
; expValue
; end expValue
;; push identifier body
DUP2
STREF
; colValue
NIP
; end colValue
;; push identifier message_
; expValue
; end expValue
; colValue
; end colValue
ENDC
POP S2
DROP
; end function getAuthMsg
NIP

.macro start
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $start_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	start_internal
.type	start_internal, @function
CALL $start_internal_macro$

.macro start_internal_macro
; function start
PUSHINT 0
PUSHREF {
	.blob x496e766f6b65206d6521
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
; end function start

.macro auth
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: hash
CALLREF {
	CALL $auth_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	auth_internal
.type	auth_internal, @function
CALL $auth_internal_macro$

.macro auth_internal_macro
;; param: hash
; function auth
; expValue
; end expValue
;; push identifier hash
DUP
; colValue
SETGLOB 14
; end colValue
PUSHINT 601894754
CALLREF {
	CALL $UserInfo_no_obj_getSigningBox_macro$
}
; end function auth
DROP

.macro getUserSign
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: handle
CALLREF {
	CALL $getUserSign_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getUserSign_internal
.type	getUserSign_internal, @function
CALL $getUserSign_internal_macro$

.macro getUserSign_internal_macro
;; param: handle
; function getUserSign
; expValue
; end expValue
;; push identifier handle
DUP
; colValue
SETGLOB 15
; end colValue
PUSHINT 599292210
CALLREF {
	CALL $UserInfo_no_obj_getAccount_macro$
}
; end function getUserSign
DROP

.macro getUserAddress
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: value
CALLREF {
	CALL $getUserAddress_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getUserAddress_internal
.type	getUserAddress_internal, @function
CALL $getUserAddress_internal_macro$

.macro getUserAddress_internal_macro
;; param: value
; function getUserAddress
;; push identifier m_hash
GETGLOB 14
NEWC
STSLICECONST x40e29f3b
STU 256
ENDC
;; decl: payload
NULL
;; decl: none
;; push identifier value
PUSH S2
;; push identifier m_sign
GETGLOB 15
PUSHINT 2
PUSHINT 821466924
PUSHINT 308407665
NEWC
STSLICECONST x6_
PUSH S4
ISNULL
PUSHCONT {
	STSLICECONST x264_
}
PUSHCONT {
	STSLICECONST x364_
}
IFELSE
STU 32
STU 32
STU 8
STSLICECONST xf_
PUSH S1
ISNULL
PUSHCONT {
	NIP
	STSLICECONST 0
}
PUSHCONT {
	STSLICECONST 1
	STU 32
}
IFELSE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 1
STUR 6
;; push identifier payload
PUSH S2
FALSE
TRUE
PUSHINT 50000000
MYADDR
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier none
PUSH2 S7, S7
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 256
}
IFELSE
PUSHSLICE x000000000000000000000000131d82cd
STSLICER
BLKSWAP 5, 1
NEWC
STSLICE
STU 128
STI 1
STI 1
STREF
STBREFR
STBREFR
ENDC
; expValue
; end expValue
; colValue
SETGLOB 16
; end colValue
TRUE
CALLREF {
	CALL $confirmAuth_internal_macro$
}
; end function getUserAddress
BLKDROP 3

.macro confirmAuth
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDI 1
ENDS
;; param: value
CALLREF {
	CALL $confirmAuth_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	confirmAuth_internal
.type	confirmAuth_internal, @function
CALL $confirmAuth_internal_macro$

.macro confirmAuth_internal_macro
;; param: value
; function confirmAuth
;; if
;; push identifier value
DUP
PUSHCONT {
	;; push identifier m_sendMsg
	GETGLOB 16
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	PUSHINT 0
	PUSHREF {
		.blob x5465726d696e6174656421
	}
	CALLREF {
		CALL $Terminal_no_obj_print_macro$
	}
}
IFELSE
;; end if
; end function confirmAuth
DROP

.macro authError
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
LDU 32
ENDS
;; param: sdkError
;; param: exitCode
CALLREF {
	CALL $authError_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	authError_internal
.type	authError_internal, @function
CALL $authError_internal_macro$

.macro authError_internal_macro
;; param: sdkError
;; param: exitCode
; function authError
PUSHINT 415789661
NIL
NEWC
PUSHREFSLICE {
	.blob x5472616e73616374696f6e206661696c65642e2053646b206572726f72203d20
}
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier sdkError
PUSH S4
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x2c204572726f7220636f6465203d20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier exitCode
PUSH S3
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x0a446f20796f752077616e7420746f2072657472793f
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $ConfirmInput_no_obj_get_macro$
}
; end function authError
DROP2

.macro authSuccess
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: id
CALLREF {
	CALL $authSuccess_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	authSuccess_internal
.type	authSuccess_internal, @function
CALL $authSuccess_internal_macro$

.macro authSuccess_internal_macro
;; param: id
; function authSuccess
;; push identifier id
PUSHINT 0
PUSHREF {
	.blob x4175746820726571756573742073656e7421
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
; end function authSuccess
DROP

.macro getPayMsg
DROP
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; decode TvmCell
LDREF
ENDS
;; param: recipient
;; param: amount
;; param: payload
CALLREF {
	CALL $getPayMsg_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x00000000000000000000000020d8ee2e2_
	STSLICER
	STREF
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getPayMsg_internal
.type	getPayMsg_internal, @function
CALL $getPayMsg_internal_macro$

.macro getPayMsg_internal_macro
;; param: recipient
;; param: amount
;; param: payload
;; ret param: message
PUSHREF {
}
; function getPayMsg
;; push identifier payload
;; push identifier amount
;; push identifier recipient
PUSH3 S1, S2, S3
NEWC
STSLICECONST x22c43926
STSLICE
STU 128
STREF
ENDC
;; decl: body
NEWC
;; decl: message_
; expValue
DUP
; end expValue
MYADDR
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
ROT
STSLICECONST x6
STSLICE
STSLICE
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
PUSHINT 0
STGRAMS
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
STZERO
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
PUSHINT 0
STGRAMS
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
PUSHINT 0
STGRAMS
; colValue
NIP
; end colValue
; expValue
; end expValue
;; uint64
PUSHINT 0
; colValue
SWAP
STU 64
; end colValue
; expValue
; end expValue
;; uint32
PUSHINT 0
; colValue
SWAP
STU 32
; end colValue
; expValue
DUP
; end expValue
STZERO
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
PUSHINT 1
STUR 1
; colValue
NIP
; end colValue
; expValue
; end expValue
;; push identifier body
DUP2
STREF
; colValue
NIP
; end colValue
;; push identifier message_
; expValue
; end expValue
; colValue
; end colValue
ENDC
POP S2
DROP
; end function getPayMsg
BLKDROP2 3, 1

.macro pay
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; decode TvmCell
LDREF
ENDS
;; param: recipient
;; param: amount
;; param: payload
CALLREF {
	CALL $pay_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	pay_internal
.type	pay_internal, @function
CALL $pay_internal_macro$

.macro pay_internal_macro
;; param: recipient
;; param: amount
;; param: payload
; function pay
; expValue
; end expValue
;; push identifier recipient
PUSH S2
; colValue
SETGLOB 17
; end colValue
; expValue
; end expValue
;; push identifier amount
PUSH S1
; colValue
SETGLOB 18
; end colValue
; expValue
; end expValue
;; push identifier payload
DUP
; colValue
SETGLOB 19
; end colValue
PUSHINT 482255309
CALLREF {
	CALL $UserInfo_no_obj_getSigningBox_macro$
}
; end function pay
BLKDROP 3

.macro getPayUserSign
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
ENDS
;; param: handle
CALLREF {
	CALL $getPayUserSign_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getPayUserSign_internal
.type	getPayUserSign_internal, @function
CALL $getPayUserSign_internal_macro$

.macro getPayUserSign_internal_macro
;; param: handle
; function getPayUserSign
; expValue
; end expValue
;; push identifier handle
DUP
; colValue
SETGLOB 15
; end colValue
PUSHINT 549140673
CALLREF {
	CALL $UserInfo_no_obj_getAccount_macro$
}
; end function getPayUserSign
DROP

.macro getPayUserAddress
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: value
CALLREF {
	CALL $getPayUserAddress_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getPayUserAddress_internal
.type	getPayUserAddress_internal, @function
CALL $getPayUserAddress_internal_macro$

.macro getPayUserAddress_internal_macro
;; param: value
; function getPayUserAddress
NULL
;; decl: none
;; push identifier value
PUSH S1
;; push identifier m_sign
GETGLOB 15
PUSHINT 2
PUSHINT 25277183
PUSHINT 2054732523
NEWC
STSLICECONST x6_
PUSH S4
ISNULL
PUSHCONT {
	STSLICECONST x264_
}
PUSHCONT {
	STSLICECONST x364_
}
IFELSE
STU 32
STU 32
STU 8
STSLICECONST xf_
PUSH S1
ISNULL
PUSHCONT {
	NIP
	STSLICECONST 0
}
PUSHCONT {
	STSLICECONST 1
	STU 32
}
IFELSE
NEWC
STSLICECONST xa_
STB
STSLICE
PUSHINT 1
STUR 6
;; push identifier m_payload
GETGLOB 19
PUSHINT 1
TRUE
;; push identifier m_amount
GETGLOB 18
;; push identifier m_dst
GETGLOB 17
NEWC
STSLICECONST 1
PUSHINT 512
STZEROES
;; push identifier none
PUSH2 S7, S7
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	SWAP
	STSLICECONST 1
	STU 256
}
IFELSE
PUSHSLICE x0000000000000000000000004cee646c
STSLICER
BLKSWAP 5, 1
NEWC
STSLICE
STU 128
STI 1
STU 8
STREF
STBREFR
STBREFR
ENDC
; expValue
; end expValue
; colValue
SETGLOB 16
; end colValue
TRUE
CALLREF {
	CALL $confirmPay_internal_macro$
}
; end function getPayUserAddress
DROP2

.macro confirmPay
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDI 1
ENDS
;; param: value
CALLREF {
	CALL $confirmPay_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	confirmPay_internal
.type	confirmPay_internal, @function
CALL $confirmPay_internal_macro$

.macro confirmPay_internal_macro
;; param: value
; function confirmPay
;; if
;; push identifier value
DUP
PUSHCONT {
	;; push identifier m_sendMsg
	GETGLOB 16
	PUSHINT 1
	SENDRAWMSG
}
PUSHCONT {
	PUSHINT 0
	PUSHREF {
		.blob x5465726d696e6174656421
	}
	CALLREF {
		CALL $Terminal_no_obj_print_macro$
	}
}
IFELSE
;; end if
; end function confirmPay
DROP

.macro payError
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
LDU 32
ENDS
;; param: sdkError
;; param: exitCode
CALLREF {
	CALL $payError_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	payError_internal
.type	payError_internal, @function
CALL $payError_internal_macro$

.macro payError_internal_macro
;; param: sdkError
;; param: exitCode
; function payError
PUSHINT 1961948418
NIL
NEWC
PUSHREFSLICE {
	.blob x5472616e73616374696f6e206661696c65642e2053646b206572726f72203d20
}
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier sdkError
PUSH S4
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x2c204572726f7220636f6465203d20
CALLREF {
	CALL $storeStringInBuilders_macro$
}
;; push identifier exitCode
PUSH S3
PUSHINT 0
FALSE
FALSE
CALLREF {
	CALL $convertIntToDecStr_macro$
}
PUSHSLICE x0a446f20796f752077616e7420746f2072657472793f
CALLREF {
	CALL $storeStringInBuilders_macro$
}
CALLREF {
	CALL $assembleList_macro$
}
CALLREF {
	CALL $ConfirmInput_no_obj_get_macro$
}
; end function payError
DROP2

.macro paySuccess
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
ENDS
;; param: id
CALLREF {
	CALL $paySuccess_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	paySuccess_internal
.type	paySuccess_internal, @function
CALL $paySuccess_internal_macro$

.macro paySuccess_internal_macro
;; param: id
; function paySuccess
;; push identifier id
PUSHINT 0
PUSHREF {
	.blob x5061796d656e7420646f6e6521
}
CALLREF {
	CALL $Terminal_no_obj_print_macro$
}
; end function paySuccess
DROP

.macro getDebotInfo
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $getDebotInfo_internal_macro$
}
;; emitting 10 value(s)
PUSH S10
PUSHCONT {
	PUSH S12
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	REVERSE 10, 1
	BLKSWAP 10, 1
	NEWC
	STSLICECONST x00000deb
	STREF
	STREF
	STREF
	BLKSWAP 7, 1
	NEWC
	STREF
	STREF
	STSLICE
	STREF
	BLKSWAP 3, 1
	NEWC
	STREF
	STREF
	STREF
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	BLKDROP 10
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getDebotInfo_internal
.type	getDebotInfo_internal, @function
CALL $getDebotInfo_internal_macro$

.macro getDebotInfo_internal_macro
;; ret param: name
PUSHREF {
}
;; ret param: version
PUSHREF {
}
;; ret param: publisher
PUSHREF {
}
;; ret param: caption
PUSHREF {
}
;; ret param: author
PUSHREF {
}
;; ret param: support
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: hello
PUSHREF {
}
;; ret param: language
PUSHREF {
}
;; ret param: dabi
PUSHREF {
}
;; ret param: icon
PUSHREF {
}
; function getDebotInfo
; expValue
; end expValue
PUSHREF {
	.blob x4e69466920436c7562
}
; colValue
POP S10
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x302e322e30
}
; colValue
POP S9
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x
}
; colValue
POP S8
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x
}
; colValue
POP S7
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x
}
; colValue
POP S6
; end colValue
;; address.makeAddrStd()
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; expValue
; end expValue
; colValue
POP S5
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x
}
; colValue
POP S4
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x656e
}
; colValue
POP S3
; end colValue
;; push identifier m_debotAbi
GETGLOB 11
DUP
ISNULL
THROWIF 63
; expValue
; end expValue
; colValue
POP S2
; end colValue
; expValue
; end expValue
PUSHREF {
	.blob x
}
; colValue
NIP
; end colValue
; end function getDebotInfo

.macro getRequiredInterfaces
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $getRequiredInterfaces_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHSLICE x00000000000000000000000036190b42a_
	STSLICER
	SWAP
	UNPAIR
	XCHG s2
	STU 32
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getRequiredInterfaces_internal
.type	getRequiredInterfaces_internal, @function
CALL $getRequiredInterfaces_internal_macro$

.macro getRequiredInterfaces_internal_macro
;; ret param: interfaces
PUSHINT 0
NEWDICT
PAIR
; function getRequiredInterfaces
;; return
PUSHINT 1
NEWDICT
PUSHINT 61327837143279038880828163389518064523935669597243029312953519799871119370467
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PAIR
NIP
; end function getRequiredInterfaces

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
; function onCodeUpgrade
;; set default state vars
PUSHINT 0
SETGLOB 10
NULL
SETGLOB 11
NULL
SETGLOB 12
NULL
SETGLOB 13
PUSHINT 0
SETGLOB 14
PUSHINT 0
SETGLOB 15
PUSHREF {
}
SETGLOB 16
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 17
PUSHINT 0
SETGLOB 18
PUSHREF {
}
SETGLOB 19
;; end set default state vars
; end function onCodeUpgrade
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro upgrade
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
;; decode TvmCell
LDREF
ENDS
;; param: state
CALLREF {
	CALL $upgrade_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	upgrade_internal
.type	upgrade_internal, @function
CALL $upgrade_internal_macro$

.macro upgrade_internal_macro
;; param: state
; function upgrade
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
;; ==
GETGLOB 2
EQUAL
THROWIFNOT 100
;; push identifier state
DUP
CTOS
LDREF
; colValue
DROP
;; decl: newcode
ACCEPT
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
;; push identifier newcode
DUP
SETCODE
;; push identifier newcode
DUP
CTOS
DUP
PUSHSLICE x8adb35
SDEQ
PUSHCONT {
	PLDREFIDX 1
	CTOS
}
IF
PLDREF
CTOS
BLESS
POP c3
CALLREF {
	CALL $:onCodeUpgrade$
}
; end function upgrade
DROP2

.macro getDebotOptions
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
ENDS
CALLREF {
	CALL $getDebotOptions_internal_macro$
}
;; emitting 4 value(s)
PUSH S4
PUSHCONT {
	PUSH S6
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	REVERSE 4, 1
	BLKSWAP 4, 1
	NEWC
	STSLICECONST xfdecd0db
	STU 8
	STREF
	STREF
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	BLKDROP 4
}
IFELSE
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	getDebotOptions_internal
.type	getDebotOptions_internal, @function
CALL $getDebotOptions_internal_macro$

.macro getDebotOptions_internal_macro
;; ret param: options
PUSHINT 0
;; ret param: debotAbi
PUSHREF {
}
;; ret param: targetAbi
PUSHREF {
}
;; ret param: targetAddr
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; function getDebotOptions
;; push identifier m_debotAbi
GETGLOB 11
ISNULL
NOT
PUSHCONT {
	;; push identifier m_debotAbi
	GETGLOB 11
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	PUSHREF {
		.blob x
	}
}
IFELSE
; expValue
; end expValue
; colValue
POP S3
; end colValue
;; push identifier m_targetAbi
GETGLOB 12
ISNULL
NOT
PUSHCONT {
	;; push identifier m_targetAbi
	GETGLOB 12
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	PUSHREF {
		.blob x
	}
}
IFELSE
; expValue
; end expValue
; colValue
POP S2
; end colValue
;; push identifier m_target
GETGLOB 13
ISNULL
NOT
PUSHCONT {
	;; push identifier m_target
	GETGLOB 13
	DUP
	ISNULL
	THROWIF 63
}
PUSHCONT {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
}
IFELSE
; expValue
; end expValue
; colValue
NIP
; end colValue
; expValue
; end expValue
;; push identifier m_options
GETGLOB 10
; colValue
POP S4
; end colValue
; end function getDebotOptions

.macro setABI
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDREF
ENDS
;; param: dabi
CALLREF {
	CALL $setABI_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setABI_internal
.type	setABI_internal, @function
CALL $setABI_internal_macro$

.macro setABI_internal_macro
;; param: dabi
; function setABI
GETGLOB 2
;; ==
GETGLOB 5
DUP
ISNULL
PUSHCONT {
	DROP
	PUSHINT 0
}
IF
EQUAL
THROWIFNOT 100
ACCEPT
; expValue
;; fetch m_options
; end expValue
GETGLOB 10
PUSHINT 1
OR
; colValue
SETGLOB 10
; end colValue
; expValue
; end expValue
;; push identifier dabi
; colValue
; end colValue
; end function setABI
SETGLOB 11

.macro c7_to_c4
GETGLOB 19
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 6
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STI 1
STU 8
SWAP
DUP
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	NEWC
	STREF
	SWAP
	STSLICECONST 1
	STBREF
}
IFELSE
SWAP
DUP
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	NEWC
	STREF
	SWAP
	STSLICECONST 1
	STBREF
}
IFELSE
SWAP
DUP
ISNULL
PUSHCONT {
	DROP
	STSLICECONST 0
}
PUSHCONT {
	NEWC
	STSLICE
	SWAP
	STSLICECONST 1
	STBREF
}
IFELSE
STU 256
STU 32
BLKSWAP 4, 1
NEWC
STREF
STSLICE
STU 128
STREF
STBREFR
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDI 1       ; pubkey [timestamp] constructor_flag memory
LDU 8
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	PLDREF
}
IFNOT
SWAP
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	PLDREF
}
IFNOT
SWAP
LDOPTREF
SWAP
DUP
ISNULL
PUSHCONT {
	CTOS
	LDMSGADDR
	DROP
}
IFNOT
SWAP
LDU 256
LDU 32
;; decode TvmCell
;; load next cell
LDREF
ENDS
CTOS
LDREF
LDMSGADDR
LDU 128
;; decode TvmCell
LDREF
ENDS
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; pubkey
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHREFCONT {
	CALL $c4_to_c7$
}
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT   ; D
	; init m_options
	PUSHINT 0
	SETGLOB 10
	; init m_debotAbi
	NULL
	SETGLOB 11
	; init m_targetAbi
	NULL
	SETGLOB 12
	; init m_target
	NULL
	SETGLOB 13
	; init m_hash
	PUSHINT 0
	SETGLOB 14
	; init m_sign
	PUSHINT 0
	SETGLOB 15
	; init m_sendMsg
	PUSHREF {
	}
	SETGLOB 16
	; init m_dst
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 17
	; init m_amount
	PUSHINT 0
	SETGLOB 18
	; init m_payload
	PUSHREF {
	}
	SETGLOB 19
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
;; param: transaction_type
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60 ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	DUP
	SETGLOB 5
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.globl	ConfirmInput_with_obj_get
.type	ConfirmInput_with_obj_get, @function
CALL $ConfirmInput_with_obj_get_macro$

.macro ConfirmInput_with_obj_get_macro
;; param: answerId
;; param: prompt
; function get
;; address.makeAddrStd()
PUSHSLICE x9c22cca7d5e6992428ce241e4d0ba84bff2c7b6b976b54ced4c545c677f87ed0515_
;; decl: addr
;; Remote call IConfirmInput.get
;; push identifier prompt
;; push identifier answerId
;; push identifier addr
PUSH3 S1, S2, S0
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000000869219e5_
STSLICER
STU 32
STREF
ENDC
PUSHINT 0
SENDRAWMSG
; end function get
DROP2

.globl	ConfirmInput_no_obj_get
.type	ConfirmInput_no_obj_get, @function
CALL $ConfirmInput_no_obj_get_macro$

.macro ConfirmInput_no_obj_get_macro
;; param: answerId
;; param: prompt
; function get
;; address.makeAddrStd()
PUSHSLICE x9c22cca7d5e6992428ce241e4d0ba84bff2c7b6b976b54ced4c545c677f87ed0515_
;; decl: addr
;; Remote call IConfirmInput.get
;; push identifier prompt
;; push identifier answerId
;; push identifier addr
PUSH3 S1, S2, S0
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x3989680000000000000000000000000000869219e5_
STSLICER
STU 32
STREF
ENDC
PUSHINT 0
SENDRAWMSG
; end function get
BLKDROP 3

.globl	Terminal_with_obj_print
.type	Terminal_with_obj_print, @function
CALL $Terminal_with_obj_print_macro$

.macro Terminal_with_obj_print_macro
;; param: answerId
;; param: message
; function print
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.print
;; push identifier message
;; push identifier answerId
;; push identifier addr
PUSH3 S1, S2, S0
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x398968000000000000000000000000000019cc9385_
STSLICER
STU 32
STREF
ENDC
PUSHINT 0
SENDRAWMSG
; end function print
DROP2

.globl	Terminal_no_obj_print
.type	Terminal_no_obj_print, @function
CALL $Terminal_no_obj_print_macro$

.macro Terminal_no_obj_print_macro
;; param: answerId
;; param: message
; function print
;; address.makeAddrStd()
PUSHSLICE x9c30f2ca6c6cddc430a5b6adb996c178ac8b316c3190cbf8a1916356e81774251c7_
;; decl: addr
;; Remote call ITerminal.print
;; push identifier message
;; push identifier answerId
;; push identifier addr
PUSH3 S1, S2, S0
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x398968000000000000000000000000000019cc9385_
STSLICER
STU 32
STREF
ENDC
PUSHINT 0
SENDRAWMSG
; end function print
BLKDROP 3

.globl	UserInfo_with_obj_getAccount
.type	UserInfo_with_obj_getAccount, @function
CALL $UserInfo_with_obj_getAccount_macro$

.macro UserInfo_with_obj_getAccount_macro
;; param: answerId
; function getAccount
;; address.makeAddrStd()
PUSHSLICE x9c34ac22a28ee13da686fdf7128c172942416ffd286f38f2ba3d76086b508fdcb01_
;; decl: addr
;; Remote call IUserInfo.getAccount
;; push identifier answerId
;; push identifier addr
DUP2
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x39896800000000000000000000000000005c9fd811_
STSLICER
STU 32
ENDC
PUSHINT 0
SENDRAWMSG
DROP
; end function getAccount

.globl	UserInfo_no_obj_getAccount
.type	UserInfo_no_obj_getAccount, @function
CALL $UserInfo_no_obj_getAccount_macro$

.macro UserInfo_no_obj_getAccount_macro
;; param: answerId
; function getAccount
;; address.makeAddrStd()
PUSHSLICE x9c34ac22a28ee13da686fdf7128c172942416ffd286f38f2ba3d76086b508fdcb01_
;; decl: addr
;; Remote call IUserInfo.getAccount
;; push identifier answerId
;; push identifier addr
DUP2
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x39896800000000000000000000000000005c9fd811_
STSLICER
STU 32
ENDC
PUSHINT 0
SENDRAWMSG
; end function getAccount
DROP2

.globl	UserInfo_with_obj_getSigningBox
.type	UserInfo_with_obj_getSigningBox, @function
CALL $UserInfo_with_obj_getSigningBox_macro$

.macro UserInfo_with_obj_getSigningBox_macro
;; param: answerId
; function getSigningBox
;; address.makeAddrStd()
PUSHSLICE x9c34ac22a28ee13da686fdf7128c172942416ffd286f38f2ba3d76086b508fdcb01_
;; decl: addr
;; Remote call IUserInfo.getSigningBox
;; push identifier answerId
;; push identifier addr
DUP2
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x398968000000000000000000000000000023e3efb7_
STSLICER
STU 32
ENDC
PUSHINT 0
SENDRAWMSG
DROP
; end function getSigningBox

.globl	UserInfo_no_obj_getSigningBox
.type	UserInfo_no_obj_getSigningBox, @function
CALL $UserInfo_no_obj_getSigningBox_macro$

.macro UserInfo_no_obj_getSigningBox_macro
;; param: answerId
; function getSigningBox
;; address.makeAddrStd()
PUSHSLICE x9c34ac22a28ee13da686fdf7128c172942416ffd286f38f2ba3d76086b508fdcb01_
;; decl: addr
;; Remote call IUserInfo.getSigningBox
;; push identifier answerId
;; push identifier addr
DUP2
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x398968000000000000000000000000000023e3efb7_
STSLICER
STU 32
ENDC
PUSHINT 0
SENDRAWMSG
; end function getSigningBox
DROP2

.globl	SwiftAddress_no_obj_value
.type	SwiftAddress_no_obj_value, @function
CALL $SwiftAddress_no_obj_value_macro$

.macro SwiftAddress_no_obj_value_macro
; function value
;; return
PUSHSLICE x6000836ae862e6c1c4e746e344048c678129e6cae022248b81e6e5a6e388642a23f_
; end function value

.macro public_function_selector
DUP
PUSHINT 1088593723
LEQ
IFJMPREF {
	DUP
	PUSHINT 94113135
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 3563
		EQUAL
		IFJMPREF {
			CALL $getDebotInfo$
		}
		DUP
		PUSHINT 25277183
		EQUAL
		IFJMPREF {
			CALL $payError$
		}
		DUP
		PUSHINT 56867000
		EQUAL
		IFJMPREF {
			CALL $getPayMsg$
		}
		DUP
		PUSHINT 94113135
		EQUAL
		IFJMPREF {
			CALL $start$
		}
	}
	DUP
	PUSHINT 482255309
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 308407665
		EQUAL
		IFJMPREF {
			CALL $authSuccess$
		}
		DUP
		PUSHINT 388172858
		EQUAL
		IFJMPREF {
			CALL $upgrade$
		}
		DUP
		PUSHINT 415789661
		EQUAL
		IFJMPREF {
			CALL $confirmAuth$
		}
		DUP
		PUSHINT 482255309
		EQUAL
		IFJMPREF {
			CALL $getPayUserSign$
		}
	}
	DUP
	PUSHINT 601894754
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 549140673
		EQUAL
		IFJMPREF {
			CALL $getPayUserAddress$
		}
		DUP
		PUSHINT 583285030
		EQUAL
		IFJMPREF {
			CALL $pay$
		}
		DUP
		PUSHINT 599292210
		EQUAL
		IFJMPREF {
			CALL $getUserAddress$
		}
		DUP
		PUSHINT 601894754
		EQUAL
		IFJMPREF {
			CALL $getUserSign$
		}
	}
	DUP
	PUSHINT 1088593723
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 763849393
		EQUAL
		IFJMPREF {
			CALL $getAuthMsg$
		}
		DUP
		PUSHINT 821466924
		EQUAL
		IFJMPREF {
			CALL $authError$
		}
		DUP
		PUSHINT 940713138
		EQUAL
		IFJMPREF {
			CALL $auth$
		}
		DUP
		PUSHINT 1088593723
		EQUAL
		IFJMPREF {
			CALL $onAuth$
		}
	}
}
DUP
PUSHINT 2112671963
LEQ
IFJMPREF {
	DUP
	PUSHINT 1961948418
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 1482960138
		EQUAL
		IFJMPREF {
			CALL $getRequiredInterfaces$
		}
		DUP
		PUSHINT 1568115769
		EQUAL
		IFJMPREF {
			CALL $setABI$
		}
		DUP
		PUSHINT 1756716863
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
		DUP
		PUSHINT 1961948418
		EQUAL
		IFJMPREF {
			CALL $confirmPay$
		}
	}
	DUP
	PUSHINT 2112671963
	LEQ
	IFJMPREF {
		DUP
		PUSHINT 2054732523
		EQUAL
		IFJMPREF {
			CALL $paySuccess$
		}
		DUP
		PUSHINT 2112671963
		EQUAL
		IFJMPREF {
			CALL $getDebotOptions$
		}
	}
}
